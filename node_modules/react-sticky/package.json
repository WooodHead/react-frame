{
  "_args": [
    [
      {
        "raw": "react-sticky@^5.0.2",
        "scope": null,
        "escapedName": "react-sticky",
        "name": "react-sticky",
        "rawSpec": "^5.0.2",
        "spec": ">=5.0.2 <6.0.0",
        "type": "range"
      },
      "/Users/gaoyanru/Documents/demo/react-frame/node_modules/rmc-list-view"
    ]
  ],
  "_from": "react-sticky@>=5.0.2 <6.0.0",
  "_id": "react-sticky@5.0.8",
  "_inCache": true,
  "_location": "/react-sticky",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/react-sticky-5.0.8.tgz_1492605132106_0.9278636975213885"
  },
  "_npmUser": {
    "name": "dbarbalato",
    "email": "dbarbalato@gmail.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-sticky@^5.0.2",
    "scope": null,
    "escapedName": "react-sticky",
    "name": "react-sticky",
    "rawSpec": "^5.0.2",
    "spec": ">=5.0.2 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/rmc-list-view"
  ],
  "_resolved": "https://registry.npmjs.org/react-sticky/-/react-sticky-5.0.8.tgz",
  "_shasum": "d5f85f96977f410081d792ab81886c622c5d8b14",
  "_shrinkwrap": null,
  "_spec": "react-sticky@^5.0.2",
  "_where": "/Users/gaoyanru/Documents/demo/react-frame/node_modules/rmc-list-view",
  "author": {
    "name": "Captivation Software"
  },
  "bugs": {
    "url": "https://github.com/captivationsoftware/react-sticky/issues"
  },
  "dependencies": {
    "prop-types": "^15.5.8"
  },
  "description": "Sticky component for React",
  "devDependencies": {
    "babel-cli": "^6.6.0",
    "babel-core": "^6.6.0",
    "babel-plugin-add-module-exports": "^0.1.2",
    "babel-plugin-transform-object-assign": "^6.5.0",
    "babel-preset-es2015": "^6.5.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-0": "^6.5.0",
    "chai": "^3.2.0",
    "jsdom": "8.0.4",
    "mocha": "^2.2.5",
    "react": "^0.14.0 || ^15.0.0",
    "react-addons-test-utils": "^0.14.0 || ^15.0.0",
    "react-dom": "^0.14.0 || ^15.0.0",
    "rimraf": "^2.5.2",
    "webpack": "^1.12.14"
  },
  "directories": {},
  "dist": {
    "shasum": "d5f85f96977f410081d792ab81886c622c5d8b14",
    "tarball": "https://registry.npmjs.org/react-sticky/-/react-sticky-5.0.8.tgz"
  },
  "gitHead": "59df8d83cec4cb85d25c57fa94491fb6970f76c2",
  "homepage": "https://github.com/captivationsoftware/react-sticky",
  "keywords": [
    "react-component",
    "React",
    "Sticky"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "dbarbalato",
      "email": "dbarbalato@gmail.com"
    }
  ],
  "name": "react-sticky",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.0 || ^15.0.0",
    "react-dom": "^0.14.0 || ^15.0.0"
  },
  "readme": "react-sticky [![Build Status](https://travis-ci.org/captivationsoftware/react-sticky.svg?branch=master)](https://travis-ci.org/captivationsoftware/react-sticky)\n============\nThe most powerful Sticky library available for React!\n\n#### Demos\n  - [Basic](http://rawgit.com/captivationsoftware/react-sticky/master/examples/basic/index.html)\n  - [Timeline](http://rawgit.com/captivationsoftware/react-sticky/master/examples/timeline/index.html)\n\n#### Highlights\n  - Fully-nestable, allowing you to build awesome layouts with familiar syntax\n  - Sane defaults so you spend less time configuring\n  - Allows multiple Sticky elements on the page at once with compositional awareness!\n\n## Installation\n```sh\nnpm install react-sticky\n```\n\nTip: run `npm build` to build the compressed UMD version suitable for inclusion via CommonJS, AMD, and even good old fashioned `<script>` tags (available as `ReactSticky`).\n\n## Overview & Basic Example\n\nIt all starts with a `<StickyContainer />`. This is basically a plain ol' `<div />` with a React-managed `padding-top` css attribute. As you scroll down the page, all `<Sticky />` tags within\nwill be constrained to the bounds of its closest `<StickyContainer />` parent.\n\nThe elements you actually want to \"stick\" should be wrapped in the `<Sticky />` tag. The full list of props are available below, but typical usage will look something like so:\n\napp.jsx\n```js\nimport React from 'react';\nimport { StickyContainer, Sticky } from 'react-sticky';\n...\n\nclass App extends React.Component ({\n  render() {\n    return (\n      ...\n      <StickyContainer>\n        ...\n        <Sticky>\n          <header>\n            ...\n          </header>\n        </Sticky>\n        ...\n      </StickyContainer>\n      ...\n    );\n  },\n});\n\n```\n\nWhen the \"stickiness\" becomes activated, the following inline style rules are applied to the Sticky element:\n\n```css\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: < width is inherited from the closest StickyContainer >\n```\nNote that the calculation of the Sticky element's height does not currently take margins into account. If you have margins on this element it may result in unexpected behavior.\n\n### `<StickyContainer />` Props\n\n`<StickyContainer />` passes along all props you provide to it without interference. That's right - no restrictions - go nuts!  \n\n### `<Sticky />` Props\n\n#### stickyStyle _(default: {})_\nIn the event that you wish to override the style rules applied, simply pass in the style object as a prop:\n\napp.jsx\n```js\n<StickyContainer>\n  <Sticky stickyStyle={customStyleObject}>\n    <header />\n  </Sticky>\n</StickyContainer>\n```\n\nNote: You likely want to avoid messing with the following attributes in your stickyStyle: `left`, `top`, and `width`.\n\n#### stickyClassName _(default: 'sticky')_\nYou can also specify a class name to be applied when the element becomes sticky:\n\napp.jsx\n```js\n<StickyContainer>\n  ...\n  <Sticky stickyClassName={customClassName}>\n    <header />\n  </Sticky>\n  ...\n</StickyContainer>\n```\n\n#### topOffset _(default: 0)_\nSticky state will be triggered when the top of the element is `topOffset` pixels from the top of the closest `<StickyContainer />`. Positive numbers give the impression of a lazy sticky state, whereas negative numbers are more eager in their attachment.\n\napp.jsx\n```js\n<StickyContainer>\n  ...\n  <Sticky topOffset={80}>\n    <SomeChild />\n  </Sticky>\n  ...\n</StickyContainer>\n```\n\nThe above would result in an element that becomes sticky once its top is greater than or equal to 80px away from the top of the `<StickyContainer />`.\n\n\n#### bottomOffset _(default: 0)_\nSticky state will be triggered when the bottom of the element is `bottomOffset` pixels from the bottom of the closest `<StickyContainer />`.\n\napp.jsx\n```js\n<StickyContainer>\n  ...\n  <Sticky bottomOffset={80}>\n    <SomeChild />\n  </Sticky>\n  ...\n</StickyContainer>\n```\n\n\n#### className _(default: '')_\nYou can specify a class name that would be applied to the resulting element:\n\napp.jsx\n```js\n<StickyContainer>\n  ...\n  <Sticky className={className}>\n    <header />\n  </Sticky>\n  ...\n</StickyContainer>\n```\n\n#### style _(default: {})_\nYou can also specify a style object that would be applied to the resulting element:\n\napp.jsx\n```js\n<StickyContainer>\n  ...\n  <Sticky style={{background: 'red'}}>\n    <header />\n  </Sticky>\n</StickyContainer>\n```\n\nNote: In the event that `stickyStyle` rules conflict with `style` rules, `stickyStyle` rules take precedence ONLY while sticky state is active.\n\n#### onStickyStateChange _(default: function() {})_\n\nUse the onStickyStateChange prop to fire a callback function when the sticky state changes:\n\napp.jsx\n```js\n<StickyContainer>\n  ...\n  <Sticky onStickyStateChange={this.handleStickyStateChange}>\n    <header />\n  </Sticky\n  ...\n</StickyContainer>\n```\n\n#### isActive _(default: true)_\n\nUse the isActive prop to manually turn sticky on or off:\n\napp.jsx\n```js\n<StickyContainer>\n  ...\n  <Sticky isActive={false}>\n    <header />\n  </Sticky\n  ...\n</StickyContainer>\n```\n\n### License\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/captivationsoftware/react-sticky.git"
  },
  "scripts": {
    "build": "npm run transpile && npm run dist",
    "clean": "rimraf lib dist",
    "dist": "webpack lib/index.js dist/react-sticky.js --display-modules --progress && NODE_ENV=production webpack lib/index.js dist/react-sticky.min.js --display-modules --progress",
    "prepublish": "npm run clean && npm run build",
    "test": "mocha --compilers js:babel-core/register test/unit",
    "transpile": "babel src --loose --out-dir lib"
  },
  "version": "5.0.8"
}
