{
  "_args": [
    [
      {
        "raw": "rmc-nuka-carousel@^2.2.0",
        "scope": null,
        "escapedName": "rmc-nuka-carousel",
        "name": "rmc-nuka-carousel",
        "rawSpec": "^2.2.0",
        "spec": ">=2.2.0 <3.0.0",
        "type": "range"
      },
      "/Users/gaoyanru/Documents/demo/react-frame/node_modules/antd-mobile"
    ]
  ],
  "_from": "rmc-nuka-carousel@>=2.2.0 <3.0.0",
  "_id": "rmc-nuka-carousel@2.2.1",
  "_inCache": true,
  "_location": "/rmc-nuka-carousel",
  "_nodeVersion": "6.10.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rmc-nuka-carousel-2.2.1.tgz_1496324581478_0.27788043138571084"
  },
  "_npmUser": {
    "name": "paranoidjk",
    "email": "hust2012jiangkai@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rmc-nuka-carousel@^2.2.0",
    "scope": null,
    "escapedName": "rmc-nuka-carousel",
    "name": "rmc-nuka-carousel",
    "rawSpec": "^2.2.0",
    "spec": ">=2.2.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/antd-mobile"
  ],
  "_resolved": "https://registry.npmjs.org/rmc-nuka-carousel/-/rmc-nuka-carousel-2.2.1.tgz",
  "_shasum": "c4238193a298be128a2f13ecb5c26fd77ad00ccd",
  "_shrinkwrap": null,
  "_spec": "rmc-nuka-carousel@^2.2.0",
  "_where": "/Users/gaoyanru/Documents/demo/react-frame/node_modules/antd-mobile",
  "author": {
    "name": "Ken Wheeler"
  },
  "bugs": {
    "url": "https://github.com/kenwheeler/nuka-carousel/issues"
  },
  "dependencies": {
    "create-react-class": "^15.5.3",
    "exenv": "^1.2.0",
    "kw-react-tween-state": "^0.1.5",
    "object-assign": "^4.1.0"
  },
  "description": "Pure React Carousel",
  "devDependencies": {
    "babel-core": "^5.8.25",
    "babel-eslint": "^4.1.3",
    "babel-loader": "^5.3.2",
    "chai": "^3.3.0",
    "css-loader": "^0.19.0",
    "del": "^2.0.2",
    "eslint": "^1.6.0",
    "eslint-loader": "^1.0.0",
    "eslint-plugin-react": "^3.5.1",
    "gulp": "^3.9.0",
    "gulp-babel": "^5.2.1",
    "gulp-eslint": "^1.0.0",
    "gulp-karma": "0.0.5",
    "gulp-open": "^1.0.0",
    "gulp-util": "^3.0.6",
    "gulp-webpack": "^1.5.0",
    "istanbul": "^0.3.22",
    "istanbul-instrumenter-loader": "^0.1.3",
    "karma": "^0.13.10",
    "karma-chrome-launcher": "^0.2.1",
    "karma-coverage": "^0.5.2",
    "karma-firefox-launcher": "^0.1.6",
    "karma-mocha": "^0.2.0",
    "karma-mocha-reporter": "^1.1.1",
    "karma-phantomjs-launcher": "^1.0.2",
    "karma-script-launcher": "~0.1.0",
    "karma-sinon-chai": "^1.1.0",
    "karma-webpack": "^1.7.0",
    "mocha": "^2.3.3",
    "phantomjs": "^1.9.18",
    "prop-types": "^15.5.8",
    "react": "^15.3.0",
    "react-addons-test-utils": "^15.3.0",
    "react-dom": "^15.3.0",
    "react-hot-loader": "^1.3.0",
    "sinon": "^1.17.1",
    "sinon-chai": "^2.8.0",
    "style-loader": "^0.12.4",
    "url-loader": "^0.5.6",
    "webpack": "^1.12.2",
    "webpack-dev-server": "^1.12.0"
  },
  "directories": {},
  "dist": {
    "shasum": "c4238193a298be128a2f13ecb5c26fd77ad00ccd",
    "tarball": "https://registry.npmjs.org/rmc-nuka-carousel/-/rmc-nuka-carousel-2.2.1.tgz"
  },
  "gitHead": "ec75e5796a575cf1b20fa1e9872b702d23ea533b",
  "homepage": "https://github.com/kenwheeler/nuka-carousel",
  "keywords": [
    "react",
    "carousel",
    "nuka"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "paranoidjk",
      "email": "hust2012jiangkai@gmail.com"
    },
    {
      "name": "warmhug",
      "email": "hualei5280@gmail.com"
    }
  ],
  "name": "rmc-nuka-carousel",
  "optionalDependencies": {},
  "peerDependencies": {
    "prop-types": "^15.5.8",
    "react": "^0.14.9 || ^15.3.0",
    "react-dom": "^0.14.9 || ^15.3.0"
  },
  "readme": "\n## Modify from upstream nuka-carousel@2.0.4\n> Search for `by warmhug` comments in source file to see detailed changes.\n> This fork stream's version begin from `2.2.0` and the npm package name is `rmc-nuka-carousel`.\n\n- add `swipeSpeed` prop, you can configure the swipe sensitivity.\n- add `resetAutoplay` props, when set false, you can remove the sense of frustration between the items to switch.（自动循环播放时、第一个和第二个项目之间切换时的顿挫感）\n\nNote: if you set `autoplayInterval` prop to less than 1000, You need to set the `speed` prop to less than 300 at the same time.\n\n#### develop\n\n```sh\n# after modify and submit to master, you need add tag by yourself, e.g.\ngit tag v2.2.0\ngit push --tags\n```\n\n------------\n\n#nuka-carousel\n\nA Pure ReactJS Carousel Component\n\n![http://i.imgur.com/UwP5gle.gif](http://i.imgur.com/UwP5gle.gif)\n\n###Install\n\n```\nnpm install nuka-carousel\n```\n\n###Example\n```javascript\n'use strict';\n\nvar React = require('react');\n\nvar Carousel = require('nuka-carousel');\n\nconst App = React.createClass({\n  mixins: [Carousel.ControllerMixin],\n  render() {\n    return (\n      <Carousel>\n        <img src=\"http://placehold.it/1000x400/ffffff/c0392b/&text=slide1\"/>\n        <img src=\"http://placehold.it/1000x400/ffffff/c0392b/&text=slide2\"/>\n        <img src=\"http://placehold.it/1000x400/ffffff/c0392b/&text=slide3\"/>\n        <img src=\"http://placehold.it/1000x400/ffffff/c0392b/&text=slide4\"/>\n        <img src=\"http://placehold.it/1000x400/ffffff/c0392b/&text=slide5\"/>\n        <img src=\"http://placehold.it/1000x400/ffffff/c0392b/&text=slide6\"/>\n      </Carousel>\n    )\n  }\n});\n\nmodule.exports = App;\n```\n\n###Running demo locally\n\nThe demo can be launched on local machine via `webpack-dev-server`. Run the following:\n\n```javascript\n// if webpack-dev-server is not installed globally\n./node_modules/.bin/webpack-dev-server\n\n```\nNow, you can access the application on  your localhost at following url: <a href=\"http://localhost:8080/demo\" target=\"_blank\">Demo</a>\n\n###Props\n\n####afterSlide\n`React.PropTypes.func`\n\nHook to be called after a slide is changed.\n\n####autoplay\n`React.PropTypes.bool`\n\nAutoplay mode active. Defaults to false.\n\n####autoplayInterval\n`React.PropTypes.number`\n\nInterval for autoplay iteration. Defaults to 3000.\n\n####beforeSlide\n`React.PropTypes.func`\n\nHook to be called before a slide is changed.\n\n####cellAlign\n`React.PropTypes.oneOf(['left', 'center', 'right'])`\n\nWhen displaying more than one slide, sets which position to anchor the current slide to.\n\n####cellSpacing\n`React.PropTypes.number`\n\nSpace between slides, as an integer, but reflected as `px`\n\n####data\n`React.PropTypes.func`\n\nUsed with the ControllerMixin to add carousel data to parent state.\n\n####decorators\n`React.PropTypes.array`\n\nAn array of objects that supply internal carousel controls.\nDecorator objects have `component`, `position` & `style` properties. `component` takes a React component, `position` takes a predefined position string and `style` takes an object of styles to be applied to the decorator. See an example below:\n\n```javascript\nvar Decorators = [{\n  component: React.createClass({\n    render() {\n      return (\n        <button\n          onClick={this.props.previousSlide}>\n          Previous Slide\n        </button>\n      )\n    }\n  }),\n  position: 'CenterLeft',\n  style: {\n    padding: 20\n  }\n}];\n\n// Valid position properties are TopLeft, TopCenter, TopRight\n// CenterLeft, CenterCenter, CenterRight, BottomLeft, BottomCenter\n// and BottomRight\n```\n\n####dragging\n`React.PropTypes.bool`\n\nEnable mouse swipe/dragging\n\n####easing\n`React.PropTypes.string`\n\nAnimation easing function. See valid easings here: [https://github.com/chenglou/tween-functions](https://github.com/chenglou/tween-functions)\n\n####framePadding\n`React.PropTypes.string`\n\nUsed to set the margin of the slider frame. Accepts any string dimension value such as `\"0px 20px\"` or `\"500px\"`.\n\n####frameOverflow\n`React.PropTypes.string`\n\nUsed to set overflow style property on slider frame. Defaults to `hidden`.\n\n####edgeEasing\n`React.PropTypes.string`\n\nAnimation easing function when swipe exceeds edge. See valid easings here: [https://github.com/chenglou/tween-functions](https://github.com/chenglou/tween-functions)\n\n####initialSlideHeight\n`React.PropTypes.number`\n\nInitial height of the slides in pixels.\n\n####initialSlideWidth\n`React.PropTypes.number`\n\nInitial width of the slides in pixels.\n\n####slideIndex\n`React.PropTypes.number`\n\nManually set the index of the slide to be shown.\n\n####slidesToShow\n`React.PropTypes.number`\n\nSlides to show at once.\n\n####slidesToScroll\n```\nslidesToScroll: React.PropTypes.oneOfType([\n  React.PropTypes.number,\n  React.PropTypes.oneOf(['auto'])\n])\n```\n\nSlides to scroll at once. Set to `\"auto\"` to always scroll the current number of visible slides.\n\n####slideWidth\n\n`React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number])`\n\nManually set slideWidth. If you want hard pixel widths, use a string like `slideWidth=\"20px\"`, and if you prefer a percentage of the container, use a decimal integer like `slideWidth={0.8}`\n\n####speed\n`React.PropTypes.number`\n\nAnimation duration.\n\n####swiping\n`React.PropTypes.bool`\n\nEnable touch swipe/dragging\n\n####vertical\n`React.PropTypes.bool`\n\nEnable the slides to transition vertically.\n\n####width\n`React.PropTypes.string`\n\nUsed to hardcode the slider width. Accepts any string dimension value such as `\"80%\"` or `\"500px\"`.\n\n####wrapAround\n`React.PropTypes.bool`\n\nSets infinite wrapAround mode. Defaults to `false`\n\n###ControllerMixin\n\nThe ControllerMixin provides a way to add external controllers for a carousel. To use the controller mixin, add it to your parent component as shown below:\n\n```javascript\nconst App = React.createClass({\n  mixins: [Carousel.ControllerMixin],\n  render() {\n    return (\n      <Carousel ref=\"carousel\" data={this.setCarouselData.bind(this, 'carousel')}>\n        ...\n      </Carousel>\n    )\n  }\n});\n```\n\nIt is required to give your component a ref value, and to pass the setCarouselData method to the data prop with the same ref as an argument.\n\nAfter setting this up, your parent component has a carousels object in it's state. You can now control your carousels from other child components:\n\n```javascript\nconst App = React.createClass({\n  mixins: [Carousel.ControllerMixin],\n  render() {\n    return (\n      <Carousel ref=\"carousel\" data={this.setCarouselData.bind(this, 'carousel')}>\n        ...\n      </Carousel>\n      {this.state.carousels.carousel ? <button type=\"button\" onClick={this.state.carousels.carousel.goToSlide.bind(null,4)}>\n        Go to slide 5\n      </button> : null}\n    )\n  }\n});\n\n```\n\n### Contributing\n\nSee the [Contribution Docs](CONTRIBUTING.md).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kenwheeler/nuka-carousel.git"
  },
  "scripts": {
    "start": "gulp",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "2.2.1"
}
