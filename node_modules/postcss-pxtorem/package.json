{
  "_args": [
    [
      {
        "raw": "postcss-pxtorem@^4.0.1",
        "scope": null,
        "escapedName": "postcss-pxtorem",
        "name": "postcss-pxtorem",
        "rawSpec": "^4.0.1",
        "spec": ">=4.0.1 <5.0.0",
        "type": "range"
      },
      "/Users/gaoyanru/Documents/demo/react-frame"
    ]
  ],
  "_from": "postcss-pxtorem@>=4.0.1 <5.0.0",
  "_id": "postcss-pxtorem@4.0.1",
  "_inCache": true,
  "_location": "/postcss-pxtorem",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/postcss-pxtorem-4.0.1.tgz_1493336847611_0.21116399159654975"
  },
  "_npmUser": {
    "name": "cuth",
    "email": "jon@cuth.net"
  },
  "_npmVersion": "4.5.0",
  "_phantomChildren": {
    "escape-string-regexp": "1.0.5",
    "has-ansi": "2.0.0",
    "js-base64": "2.1.9",
    "source-map": "0.5.6",
    "strip-ansi": "3.0.1"
  },
  "_requested": {
    "raw": "postcss-pxtorem@^4.0.1",
    "scope": null,
    "escapedName": "postcss-pxtorem",
    "name": "postcss-pxtorem",
    "rawSpec": "^4.0.1",
    "spec": ">=4.0.1 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-pxtorem/-/postcss-pxtorem-4.0.1.tgz",
  "_shasum": "9c64d0efe4885473cc1cb0305c6ffc3ebb45b1cd",
  "_shrinkwrap": null,
  "_spec": "postcss-pxtorem@^4.0.1",
  "_where": "/Users/gaoyanru/Documents/demo/react-frame",
  "author": {
    "name": "cuth"
  },
  "bugs": {
    "url": "https://github.com/cuth/postcss-pxtorem/issues"
  },
  "dependencies": {
    "object-assign": "^4.1.0",
    "postcss": "^5.2.10"
  },
  "description": "A CSS post-processor that converts px to rem.",
  "devDependencies": {
    "jasmine-node": "~1.11.0"
  },
  "directories": {},
  "dist": {
    "shasum": "9c64d0efe4885473cc1cb0305c6ffc3ebb45b1cd",
    "tarball": "https://registry.npmjs.org/postcss-pxtorem/-/postcss-pxtorem-4.0.1.tgz"
  },
  "gitHead": "5dadd3b4f86e4cdcf0f162e69ac99c328ada0d4a",
  "homepage": "https://github.com/cuth/postcss-pxtorem#readme",
  "keywords": [
    "css",
    "rem",
    "pixel",
    "px",
    "postcss",
    "postcss-plugin"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "cuth",
      "email": "jon@cuth.net"
    }
  ],
  "name": "postcss-pxtorem",
  "optionalDependencies": {},
  "readme": "# postcss-pxtorem [![NPM version](https://badge.fury.io/js/postcss-pxtorem.svg)](http://badge.fury.io/js/postcss-pxtorem)\n\nA plugin for [PostCSS](https://github.com/ai/postcss) that generates rem units from pixel units.\n\n\n## Usage\n\nPixels are the easiest unit to use (*opinion*). The only issue with them is that they don't let browsers change the default font size of 16. This script converts every px value to a rem from the properties you choose to allow the browser to set the font size.\n\n\n### Input/Output\n\n*With the default settings, only font related properties are targeted.*\n\n```css\n// input\nh1 {\n    margin: 0 0 20px;\n    font-size: 32px;\n    line-height: 1.2;\n    letter-spacing: 1px;\n}\n\n// output\nh1 {\n    margin: 0 0 20px;\n    font-size: 2rem;\n    line-height: 1.2;\n    letter-spacing: 0.0625rem;\n}\n```\n\n### Example\n\n```js\nvar fs = require('fs');\nvar postcss = require('postcss');\nvar pxtorem = require('postcss-pxtorem');\nvar css = fs.readFileSync('main.css', 'utf8');\nvar options = {\n    replace: false\n};\nvar processedCss = postcss(pxtorem(options)).process(css).css;\n\nfs.writeFile('main-rem.css', processedCss, function (err) {\n  if (err) {\n    throw err;\n  }\n  console.log('Rem file written.');\n});\n```\n\n### options\n\nType: `Object | Null`  \nDefault:\n```js\n{\n    rootValue: 16,\n    unitPrecision: 5,\n    propList: ['font', 'font-size', 'line-height', 'letter-spacing'],\n    selectorBlackList: [],\n    replace: true,\n    mediaQuery: false,\n    minPixelValue: 0\n}\n```\n\n- `rootValue` (Number) The root element font size.\n- `unitPrecision` (Number) The decimal numbers to allow the REM units to grow to.\n- `propList` (Array) The properties that can change from px to rem.\n    - Values need to be exact matches.\n    - Use wildcard `*` to enable all properties. Example: `['*']`\n    - Use `*` at the start or end of a word. (`['*position*']` will match `background-position-y`)\n    - Use `!` to not match a property. Example: `['*', '!letter-spacing']`\n    - Combine the \"not\" prefix with the other prefixes. Example: `['*', '!font*']` \n- `selectorBlackList` (Array) The selectors to ignore and leave as px.\n    - If value is string, it checks to see if selector contains the string.\n        - `['body']` will match `.body-class`\n    - If value is regexp, it checks to see if the selector matches the regexp.\n        - `[/^body$/]` will match `body` but not `.body`\n- `replace` (Boolean) replaces rules containing rems instead of adding fallbacks.\n- `mediaQuery` (Boolean) Allow px to be converted in media queries.\n- `minPixelValue` (Number) Set the minimum pixel value to replace.\n\n\n### Use with gulp-postcss and autoprefixer\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar pxtorem = require('postcss-pxtorem');\n\ngulp.task('css', function () {\n\n    var processors = [\n        autoprefixer({\n            browsers: 'last 1 version'\n        }),\n        pxtorem({\n            replace: false\n        })\n    ];\n\n    return gulp.src(['build/css/**/*.css'])\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('build/css'));\n});\n```\n\n### A message about ignoring properties\nCurrently, the easiest way to have a single property ignored is to use a capital in the pixel unit declaration.\n\n```css\n// `px` is converted to `rem`\n.convert {\n    font-size: 16px; // converted to 1rem\n}\n\n// `Px` or `PX` is ignored by `postcss-pxtorem` but still accepted by browsers\n.ignore {\n    border: 1Px solid; // ignored\n    border-width: 2PX; // ignored\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/cuth/postcss-pxtorem.git"
  },
  "scripts": {
    "test": "jasmine-node spec"
  },
  "version": "4.0.1"
}
